"""
В малко винарско селище са отгледани N лози.
Една трета от тях произвежда по два бидона грозде,
половината – по един бидон, а останалите лози не са дали плод през сезона.
Винарите решават да продадат половината от всички бидони грозде, като ако броят на бидоните се окаже нечетен, един бидон се използва за правене на оцет,
за да се получат две равни половини.
Напишете програма, която определя колко лози и бидони с грозде остават в селището след продажбата.

Input Format
Програмата трябва да може да обработва при едно изпълнение няколко тестови примера. Броят T на тестовете ще бъде зададен на първия ред на стандартния вход.
За всеки тестов пример на отделен ред е зададено цялото положително N, което се дели на 3 без остатък.

Constraints
5 < N < 1000

Output Format
Програмата трябва да изведе на отделен ред на стандартния изход броя на лозите и бидоните с грозде в селището след продажбата.

Sample Input 0
2
90
120

Sample Output 0
142
190
Explanation 0

Обяснение: за първия пример

• Една трета произвежда по два бидона: 90 / 3 = 30 лози дават по два бидона, което прави 30 × 2 = 60 бидона.

• Половината произвежда по един бидон: 90 / 2 = 45 лози дават по един бидон, което прави 45 × 1 = 45 бидона.

• Общо бидони: 60 + 45 = 105 бидона. Тъй като числото е нечетно, един бидон се използва за оцет, остават 104. Половината (52) се продават и 52 остават.

• След продажбата в селището остават: 90 лози + 52 бидона = 142.
"""


def cans_and_vines(vines: int) -> int:
    # vines / 3 = 2 cans
    # (veins / 3) * 2 = total number of cans for every vein that gives 2 cans

    # (cans / 2) * 1 = total number of veins that give 1 can

    # ((veins / 3) * 2) + (cans / 2) = total cans
    # if total cans is odd -> total cans - 1

    # return total vines + (total cans / 2)

    third_vines = (vines // 3) * 2
    half_vines = vines // 2

    total_cans = third_vines + half_vines

    if total_cans % 2 != 0:
        total_cans -= 1

    print(vines + (total_cans // 2))


inputs = int(input())

vines = []
for _ in range(inputs):
    vine = int(input())
    vines.append(vine)

for vine in vines:
    cans_and_vines(vine)

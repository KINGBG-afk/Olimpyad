"""
С термина „низ от скоби“ ще обозначим низ съдържащ само отварящи и затварящи скоби.
С термина „коректен низ от скоби“ ще обозначим „низ от скоби“ отговарящи на условието за поставяне на скоби в математически израз,
т.е. броят на отварящите скоби е равен на броя на затварящите и броят на отварящите скоби от началото на низа до всяка една негова позиция
е по-голям или равен на броя на затварящите. С термина „хорце от скоби“ ще обозначим „низ от скоби“,
чийто последен символ е свързан с първия и така се получава безкраен кръгов стринг. Пример:

 "Низ от скоби":

    ((()()))()

                  ==>

                                 "Хорце от скоби":

                                          (
                                      )      (

                                   (            (

                                    )          )
                                       )     (
                                          )
Тук най-горната отваряща скоба от хорцето съответства на първата такава от низа.
Вашата задача е да пресметнете на колко места може да бъде разкъсано дадено „хорце от скоби“, така че получените след това „низове от скоби“
(всеки от тях съдържащ всички скоби от хорцето в зададения от него ред) да са „коректни низове от скоби“.

Input Format

На първият ред ще получите броя на тестовите примери Т.
На следващите Т реда ще получите „низове от скоби“ (по един на ред) образуващи T на брой „хорца от скоби“.

Constraints

1 <= Т <= 6 1 <= дължината на всяко хорце <= 1,000,000 (10^6)

Output Format

За всяко едно от входните „хорца от скоби“ изведете броя на местата, където то може да бъде разкъсано,
така че получените „низове от скоби“ да са „коректни низове от скоби“ и всеки един от тях да съдържа всички символи от хорцето в зададения от него ред.

Sample Input 0

2
(()))
((()()))()
Sample Output 0

0
2
Explanation 0

Първото хорце не може да бъде разцепено коректно, тъй като броят на затварящите скоби е по-голям от броя на отварящите.
Второто хорце може да бъде разцепено на две места:
преди първия символ на входния „низ от скоби“ за него и след осмия символ. Така ще се получат „коректните низовете от скоби“ ((()()))() и ()((()()))
"""


def count_valid_splits(s) -> int:
    n = len(s)
    balance = 0
    min_balance = 0

    if s.count("(") != s.count(")"):
        return 0

    balances = [0] * n
    for i in range(n):
        balance += 1 if s[i] == "(" else -1
        balances[i] = balance
        min_balance = min(min_balance, balance)

    valid_splits = 0
    balance = 0

    for i in range(n):
        if min_balance >= 0:
            valid_splits += 1

        if s[i] == "(":
            balance -= 1
        else:
            balance += 1

        min_balance -= 1 if s[i] == "(" else -1

    return valid_splits


t = int(input())
cases = [input() for _ in range(t)]

for c in cases:
    print(count_valid_splits(c))

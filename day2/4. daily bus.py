"""
Във фабрика за производство се отчита всекидневният статус на специфично устройство за всеки ден от месеца.
Статусът се записва в число, където всеки бит от числото показва дали устройството е било в работен режим (1) или изключено (0) за съответния ден от месеца.
Вашата задача е да напишете програма, която проверява дали устройството е било включено в конкретен ден.

Жокер:

Задачата да се реши с побитови операции.

Input Format

На първия ред се подава броят на тестовите примери T. За всеки тест:

На първия ред се подава число N, което кодира работните дни на устройството за месеца.

На втория ред се подава число D, което показва деня от месеца (1 до 31), за който трябва да се провери дали устройството е било включено.

Constraints

 1 ≤ T ≤ 100

 0 ≤ N < 2^31

 1 ≤ D ≤ 31

Output Format

За всеки тестов пример изведете на нов ред "Operational" (работи), ако устройството е било включено в посочения ден, или "Off" (изключено), ако не е.

Sample Input 0

2
21
3
15
5
Sample Output 0

Operational
Off
Explanation 0

В първия тестов пример, числото 21 е представено в двоичен вид като 10101.
Това означава, че устройството е било включено на ден 1, 3, и 5. Заявката е за ден 3, където устройството е било в работен режим.
Във втория тестов пример, числото 15 е представено като 1111 в двоичен вид, което означава, че устройството е било включено до ден 4.
Заявката е за ден 5, където устройството е било изключено.
"""


def is_operating(n: int, d: int) -> str:
    if n & (1 << (d - 1)):
        return "Operational"
    return "Off"


t = int(input())
results = []

for _ in range(t):
    n = int(input())
    d = int(input())
    results.append(is_operating(n, d))

for res in results:
    print(res)
